import { createClient } from '@supabase/supabase-js';

const supabaseUrl = 'https://rfgmqogwhlnfrhifsbbg.supabase.co';
const supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJmZ21xb2d3aGxuZnJoaWZzYmJnIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTUxMTExOTIsImV4cCI6MjA3MDY4NzE5Mn0.LHBul7ZS-hRmOoeVtY5wJkdBsfWtGnRhp48tZRHTNR4';

const supabase = createClient(supabaseUrl, supabaseAnonKey);

async function testProfilesAccess() {
  console.log('üîç Testando acesso √† tabela profiles ap√≥s corre√ß√£o RLS...');
  
  try {
    // Teste 1: Verificar se conseguimos acessar a tabela profiles (deve falhar sem autentica√ß√£o)
    console.log('\n1. Testando acesso geral √† tabela profiles (sem autentica√ß√£o):');
    const { data: profiles, error: profilesError } = await supabase
      .from('profiles')
      .select('*')
      .limit(5);
    
    if (profilesError) {
      console.log('‚úÖ Esperado: Erro ao acessar profiles sem autentica√ß√£o:', profilesError.message);
    } else {
      console.log('‚ö†Ô∏è Inesperado: Acesso √† tabela profiles sem autentica√ß√£o funcionou');
      console.log('üìä Total de profiles encontrados:', profiles?.length || 0);
    }
    
    // Teste 2: Tentar fazer login com um usu√°rio de teste
    console.log('\n2. Tentando fazer login com usu√°rio de teste...');
    
    // Primeiro, vamos verificar se h√° usu√°rios na tabela auth.users
    console.log('\n3. Verificando usu√°rios existentes no sistema...');
    
    // Como n√£o podemos acessar auth.users diretamente, vamos tentar criar um usu√°rio de teste
    const testEmail = 'teste@bombeiros.com';
    const testPassword = 'teste123456';
    
    console.log('\n4. Tentando fazer signup/login com usu√°rio de teste...');
    
    // Tentar fazer login primeiro
    const { data: loginData, error: loginError } = await supabase.auth.signInWithPassword({
      email: testEmail,
      password: testPassword,
    });
    
    if (loginError && loginError.message.includes('Invalid login credentials')) {
      console.log('üë§ Usu√°rio n√£o existe, tentando criar...');
      
      // Tentar criar usu√°rio
      const { data: signupData, error: signupError } = await supabase.auth.signUp({
        email: testEmail,
        password: testPassword,
        options: {
          data: {
            full_name: 'Usu√°rio Teste'
          }
        }
      });
      
      if (signupError) {
        console.error('‚ùå Erro ao criar usu√°rio:', signupError.message);
        return;
      } else {
        console.log('‚úÖ Usu√°rio criado com sucesso');
        console.log('üìß Verifique o email para confirmar a conta');
        return;
      }
    } else if (loginError) {
      console.error('‚ùå Erro no login:', loginError.message);
      return;
    } else {
      console.log('‚úÖ Login realizado com sucesso');
      console.log('üë§ User ID:', loginData.user?.id);
      console.log('üìß Email:', loginData.user?.email);
      
      // Teste 5: Buscar perfil do usu√°rio logado
      console.log('\n5. Buscando perfil do usu√°rio logado...');
      const { data: userProfile, error: userProfileError } = await supabase
        .from('profiles')
        .select('*')
        .eq('user_id', loginData.user.id)
        .single();
      
      if (userProfileError) {
        if (userProfileError.code === 'PGRST116') {
          console.log('‚ö†Ô∏è Perfil n√£o encontrado, tentando criar...');
          
          // Tentar criar perfil
          const { data: newProfile, error: createError } = await supabase
            .from('profiles')
            .insert({
              user_id: loginData.user.id,
              email: loginData.user.email,
              full_name: loginData.user.user_metadata?.full_name || 'Usu√°rio Teste',
              role: 'user'
            })
            .select()
            .single();
          
          if (createError) {
            console.error('‚ùå Erro ao criar perfil:', createError);
          } else {
            console.log('‚úÖ Perfil criado com sucesso:', newProfile);
          }
        } else {
          console.error('‚ùå Erro ao buscar perfil:', userProfileError);
        }
      } else {
        console.log('‚úÖ Perfil do usu√°rio encontrado:', userProfile);
      }
      
      // Fazer logout
      await supabase.auth.signOut();
      console.log('\n6. Logout realizado');
    }
    
  } catch (error) {
    console.error('‚ùå Erro geral:', error);
  }
}

testProfilesAccess();